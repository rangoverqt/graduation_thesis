<html>
    <head>
            <title>Trang bài viết Admin</title>
            <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
      <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.css">
      <link rel='stylesheet' href='/css/style.css' />
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link href="/fleditor/css/froala_editor.pkgd.min.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="/fleditor/js/froala_editor.pkgd.min.js"></script>
    <link href="/fleditor/css/froala_style.min.css" rel="stylesheet" type="text/css" />    
    <script type="text/javascript" src="/fleditor/js/languages/vi.js"></script>
    <script type="text/javascript" src="/fleditor/js/plugins/image.min.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <div id="dieuhuong_admin" class="col-md-2" style="background-color: teal;height: 100%">
                <h4 style="float:none">Admin Dashboard</h4>
                <ul>
                    <li><a id="db_nd" href="/admin/dashboard"><i class="fas fa-user"></i>   Tài khoản người dùng</a></li>
                    <li><a id="db_bv" href="/admin/baiviet_nd"><i class="fas fa-sticky-note"></i>    Bài viết người dùng</a></li>
                    <li><a href="/admin/chude_db"><i class="fas fa-biohazard"></i>    Chủ đề bài viết</a></li>
                    <li><a href="/admin/phanquyen_db"><i class="fas fa-level-up-alt"></i>    Phân quyền chức vụ</a></li>
                    <li><a href="/admin/hopthu"><i class="fa fa-envelope"></i>    Hộp thư tiếp nhận</a></li>
                </ul>
            </div>
            <div class="col-md-10" style="padding: 0;margin:0;">
                <h5 style="margin-left: 20px;"><strong><i class="fas fa-sticky-note"></i>  Các bài viết đã xét</strong></h5>
                <div class="middle-content">
                    <select id="loc_danhgia" class="form-control" style="float: right;width:20%">
                        <option value="k">Lọc theo trạng thái</option>
                            <option value="0">Thông qua</option>
                            <option value="1">Từ chối</option>
                    </select>
                    <div align="center">
                        <input type="text" name="search" id="search" class="form-control" placeholder="Tìm kiếm" style="width: 60%">
                    </div>
                <div style="overflow:scroll;height:345px;width:100%;overflow:auto;background-color: whitesmoke">
                    <table class="table1 table-striped table-hover table-bordered" id="daxet_table">
                        <thead>
                            <tr>
                                <th>STT</th>
                                <th class="col-sm-2">Tiêu đề</th>
                                <th class="col-sm-3">Nội dung</th>
                                <th>Người đăng</th>
                                <th>Chủ đề</th>
                                <th class="col-sm-2">Ngày đăng</th>
                                <th>Trạng thái</th>
                                <th>Người duyệt</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="show_loc_danhgia">
                            <% var n = 1; %>
                            <% BAIVIET.forEach(function(data){ %>
                                <tr>
                                <td style="text-align: center"><%= n++ %></td>
                                <td><%= data.tieude %></td>
                                <td><%= data.noidung.substring(0,100) %>...</td>
                                <td><%= data.nguoidang %></td>
                                <td><%= data.ten_cd %></td>
                                <td><%= data.created_at %></td>
                                <% if(data.restrict_area == 0) { %>
                                    <td style="text-align: center;background-color:forestgreen;color:white"><strong>Thông qua</strong></td>
                                    <% } else { %>
                                        <td style="text-align: center;background-color: red;color:white"><strong>Từ chối</strong></td>
                                        <% } %>
                                    <td><%= data.duyetbai %></td>
                                    <td><button id="<%= data.id %>" class="xem_bv" type="button"><i style="font-size: 19px" class="fas fa-eye"></i></button></td>
                                    <td><button id="<%= data.id %>"class="xoa_bv" type="button"><i style="font-size: 19px" class="fa fa-trash"></i></button></td>
                                </tr>
                                <% }) %>
                        </tbody>
                        </table>
                </div>
            </div>
            </div>
            <div class="col-md-10">
                <div class="col-sm-4">
                <h5><strong><i class="far fa-chart-bar"></i>  Thông số duyệt</strong></h5>
                    <div id="doughnutChart" class="chart"></div>
                </div>
                <div class="col-sm-2" style="margin-top:30px;border-right: gray 2px solid">
                    <p><strong style="font-size: 19px;color:#FC4349">&#9632;</strong> <strong>Chưa duyệt: </strong><%= THONGSO_BV.chuaduyet %></p>
                    <p><strong style="font-size: 19px;color:#6DBCDB">&#9632;</strong> <strong>Thông qua: </strong><%= THONGSO_BV.thongqua %></p>
                    <p><strong style="font-size: 19px;color:#F7E248">&#9632;</strong> <strong>Từ chối: </strong><%= THONGSO_BV.tuchoi %></p>
                    <% var chuaduyet_bv = parseFloat(THONGSO_BV.chuaduyet); var thongqua_bv = parseFloat(THONGSO_BV.thongqua); var tuchoi_bv = parseFloat(THONGSO_BV.tuchoi); %>
                    <p><strong>Đã xét: </strong><%= thongqua_bv + tuchoi_bv %></p>
                    <h4 style="margin: 0"><strong>Tổng bài viết: </strong><%= chuaduyet_bv + thongqua_bv + tuchoi_bv %></h4>
                    <% var tong_bv = chuaduyet_bv + thongqua_bv + tuchoi_bv %>
                    <% if((thongqua_bv + tuchoi_bv) < tong_bv/2) { %>
                        <h4 style="color: white;width: 100%;background-color: red;padding: 10px;margin: 10px 0"><strong><i class="far fa-angry"></i> CẢNH BÁO</strong></h4>
                        <h5 style="margin-top: px">Hiệu suất duyệt bài không tốt</h5>
                        <h5 style="color: red"><strong>Phân nửa số bài chưa duyệt</strong></h5>
                        <% } else if((thongqua_bv + tuchoi_bv) >= tong_bv/2) {%>
                            <h4 style="color: white;width: 100%;background-color: goldenrod;padding: 10px;margin: 10px 0"><strong><i class="far fa-frown"></i> TẠM ỔN</strong></h4>
                            <h5 style="margin-top: px">Hiệu suất duyệt bài trung bình</h5>
                            <h5 style="color: red"><strong>Trên phân nửa số bài được duyệt</strong></h5>
                            <% } else if((thongqua_bv + tuchoi_bv) == tong_bv){ %>
                                <h4 style="color: white;width: 100%;background-color: forestgreen;padding: 10px;margin: 10px 0"><strong><i class="far fa-smile"></i> TỐT</strong></h4>
                                <h5 style="margin-top: px">Hiệu suất duyệt bài tốt</h5>
                                <h5 style="color: red"><strong>Tất cả bài viết được duyệt</strong></h5>
                                <% } %>
                    <input id="chuaduyet" value="<%= THONGSO_BV.chuaduyet %>" hidden>
                    <input id="thongqua" value="<%= THONGSO_BV.thongqua %>" hidden>
                    <input id="tuchoi" value="<%= THONGSO_BV.tuchoi %>" hidden>
                </div>
                <div class="col-sm-3" >
                        <h5><strong><i class="fas fa-tasks"></i>  Thông số trì hoãn làm việc</strong></h5>
                        <div style="width: 260px;height: 260px" id="pieChart" class="chart1"></div>
                        </div>
                        <div class="col-sm-3" style="margin-top: 30px;">
                            <p><strong style="font-size: 19px;color:#2C3E50 ">&#9632;</strong> <strong>Đã xem nhưng chưa duyệt: </strong><%= THONGSO_BV.daxem %></p>
                            <p><strong style="font-size: 19px;color:#D7DADB ">&#9632;</strong> <strong>Chưa xem: </strong><%= THONGSO_BV.chuaxem %></p>
                            <input id="daxem" value="<%= THONGSO_BV.daxem %>" hidden>
                            <input id="chuaxem" value="<%= THONGSO_BV.chuaxem %>" hidden>
                        </div>
            </div>
            <div class="col-md-2" style="background-color: lightseagreen">
                <h5><strong>Bài viết chưa duyệt</strong></h5>
            </div>
            <div class="col-md-10" style="border-top: lightslategrey 2px solid">
                <div align="center">
                    <select id="loc_chude" class="form-control" style="float: right;width:20%">
                        <option value="0">Lọc theo chủ đề</option>
                        <% CHUDE.forEach(function(data){ %>
                            <option value="<%= data.id %>"><%= data.ten_cd %></option>
                            <% }) %>
                    </select>
                    <input type="text" name="search1" id="search1" class="form-control" placeholder="Tìm kiếm" style="width: 60%">
                </div>
                    <div style="overflow:scroll;height:345px;width:100%;overflow:auto;background-color: whitesmoke">
                            <table class="table1 table-striped table-hover table-bordered" id="chuaxet_table">
                                <thead>
                                    <tr>
                                            <th>STT</th>
                                            <th class="col-sm-2">Tiêu đề</th>
                                            <th class="col-sm-3">Nội dung</th>
                                            <th>Người đăng</th>
                                            <th>Chủ đề</th>
                                            <th class="col-sm-2">Ngày đăng</th>
                                            <th>Keyword</th>
                                            <th>Trích dẫn</th>
                                            <th></th>
                                    </tr>
                                    <tbody id="show_loccd">
                                        <% var n = 1; %>
                                        <% BAIVIET_CX.forEach(function(data){ %>
                                            <tr>
                                                <td style="text-align: center"><%= n++ %></td>
                                                <td><%= data.tieude %></td>
                                                <td><%= data.noidung.substring(0,100) %></td>
                                                <td><%= data.hoten %></td>
                                                <td style="text-align: center"><%= data.ten_cd %></td>
                                                <td><%= data.created_at %></td>
                                                <td><%= data.keyword %></td>
                                                <td><%= data.trichdan %></td>
                                                <td><button id="<%= data.id %>"class="xem_bv" type="button"><i style="font-size: 19px" class="fas fa-eye"></i></button></td>
                                            </tr>
                                            <% }) %>
                                    </tbody>
                                </thead>
                                </table>
                            </div>
            </div>
            <div class="col-sm-2">

            </div>
            <div class="col-sm-10">
                <div id="contenitore">
                    <div class="left">
                    
                    <table class="table_chart">
                    <caption style="text-align: center"><strong>Bài viết theo chủ đề</strong></caption>
                    <tbody>
                      <% var bvanime = parseFloat(THONGSO_BVCD.bv_anime); %>
                      <% var bvhistory = parseFloat(THONGSO_BVCD.bv_history); %>
                      <% var bvmusic = parseFloat(THONGSO_BVCD.bv_music); %>
                    <tr><td>Anime</td><td><%= Number((bvanime*100/tong_bv).toFixed(1)) %>%</td><td style="background-color:#336699">&nbsp;</td></tr>
                    <tr><td>History</td><td><%= Number((bvhistory*100/tong_bv).toFixed(1)) %>%</td><td style="background-color:#003366">&nbsp;</td></tr>
                    <tr><td>Music</td><td><%= Number((bvmusic*100/tong_bv).toFixed(1)) %>%</td><td style="background-color:#ff6600">&nbsp;</td></tr>
                    </tbody></table>
                    <p><strong>Anime: </strong><%= bvanime %> Bài</p>
                    <p><strong>History: </strong><%= bvhistory %> Bài</p>
                    <p><strong>Music: </strong><%= bvmusic %> Bài</p>
                    </div>
                    <div class="left">
                    <div id="grafico">
                    <div class="riga" style="top:25%"><div>75%</div></div>
                    <div class="riga" style="top:50%"><div>50%</div></div>
                    <div class="riga" style="top:75%"><div>25%</div></div>
                    <div id="col0" style="left:0; background-color:#336699;" class="column"></div>
                    <div id="col1" style="left:25%; background-color:#003366;" class="column"></div>
                    <div id="col2" style="left:50%; background-color:#ff6600;" class="column"></div>
                    
                    </div>
                    </div>
                    <div class="canc"></div>
                    </div>
            </div>
            </div>
            </div>
            </body>
            <script>
            $(document).ready(function(){
                $('#db_bv').addClass('selected');
            });

$(document).on('click', '.xoa_bv',function(){
    var idbv = $(this).attr('id');
    if(confirm('Bạn có chắc muốn xóa bài viết ?')){
    $.get('./ajax_admin/xoa_bv/'+idbv,function(){

    });
    // alert(idbv);
    alert('Đã xóa bài viết');
    window.location.reload();
}
});

$(document).on('click','.xem_bv',function(){
    var idbv = $(this).attr('id');
    window.location = './xemchitiet_baiviet/'+idbv;
})

$(document).on('change','#loc_danhgia',function(){
    var danhgia = $(this).val();
    if(danhgia == 'k'){
        window.location.reload(false);
    }
    else{
    $.get('./ajax_admin/loc_danhgia/'+danhgia,function(data){
        var shown = $('#show_loc_danhgia');
        shown.html(data);
    })
}
});

$(document).on('change','#loc_chude',function(){
    var chude = $(this).val();
    if(chude == 0){
        window.location.reload(false);
    }
    else{
        $.get('./ajax_admin/loc_chude/'+chude,function(data){
            var shown = $('#show_loccd');
            shown.html(data);
        })
    }
})

//test search
$(document).ready(function(){
    $('#search').keyup(function(){
        search_table($(this).val());
    });
    function search_table(value){
        $('#daxet_table tbody tr').each(function(){
            var found = 'false';
            $(this).each(function(){
                if($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0)
                {
                    found = 'true';
                }
            });
            if(found == 'true'){
                $(this).show();
            }
            else{
                $(this).hide();
            }
        });
    }
})

//search 2

$(document).ready(function(){
    $('#search1').keyup(function(){
        search_table($(this).val());
    });
    function search_table(value){
        $('#chuaxet_table tbody tr').each(function(){
            var found = 'false';
            $(this).each(function(){
                if($(this).text().toLowerCase().indexOf(value.toLowerCase()) >= 0)
                {
                    found = 'true';
                }
            });
            if(found == 'true'){
                $(this).show();
            }
            else{
                $(this).hide();
            }
        });
    }
})
            //test

            var chuaduyet = parseFloat($('#chuaduyet').val());
            var thongqua = parseFloat($('#thongqua').val());
            var tuchoi = parseFloat($('#tuchoi').val());

            $(function(){
  $("#doughnutChart").drawDoughnutChart([
    
    { title: "Chưa duyệt", value:  chuaduyet,   color: "#FC4349" },
    { title: "Thông qua",      value:  thongqua,   color: "#6DBCDB" },
    { title: "Từ chối",        value : tuchoi,   color: "#F7E248" },
    
  ]);
});
;(function($, undefined) {
  $.fn.drawDoughnutChart = function(data, options) {
    var $this = this,
      W = $this.width(),
      H = $this.height(),
      centerX = W/2,
      centerY = H/2,
      cos = Math.cos,
      sin = Math.sin,
      PI = Math.PI,
      settings = $.extend({
        segmentShowStroke : true,
        segmentStrokeColor : "#0C1013",
        segmentStrokeWidth : 1,
        baseColor: "rgba(0,0,0,0.5)",
        baseOffset: 4,
        edgeOffset : 10,//offset from edge of $this
        percentageInnerCutout : 75,
        animation : true,
        animationSteps : 90,
        animationEasing : "easeInOutExpo",
        animateRotate : true,
        tipOffsetX: -8,
        tipOffsetY: -45,
        tipClass: "doughnutTip",
        summaryClass: "doughnutSummary",
        summaryTitle: "TOTAL:",
        summaryTitleClass: "doughnutSummaryTitle",
        summaryNumberClass: "doughnutSummaryNumber",
        beforeDraw: function() {  },
        afterDrawed : function() {  },
        onPathEnter : function(e,data) {  },
        onPathLeave : function(e,data) {  }
      }, options),
      animationOptions = {
        linear : function (t) {
          return t;
        },
        easeInOutExpo: function (t) {
          var v = t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t;
          return (v>1) ? 1 : v;
        }
      },
      requestAnimFrame = function() {
        return window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function(callback) {
            window.setTimeout(callback, 1000 / 60);
          };
      }();

    settings.beforeDraw.call($this);

    var $svg = $('<svg width="' + W + '" height="' + H + '" viewBox="0 0 ' + W + ' ' + H + '" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"></svg>').appendTo($this),
        $paths = [],
        easingFunction = animationOptions[settings.animationEasing],
        doughnutRadius = Min([H / 2,W / 2]) - settings.edgeOffset,
        cutoutRadius = doughnutRadius * (settings.percentageInnerCutout / 100),
        segmentTotal = 0;

    //Draw base doughnut
    var baseDoughnutRadius = doughnutRadius + settings.baseOffset,
        baseCutoutRadius = cutoutRadius - settings.baseOffset;
    $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))
      .attr({
        "d": getHollowCirclePath(baseDoughnutRadius, baseCutoutRadius),
        "fill": settings.baseColor
      })
      .appendTo($svg);

    //Set up pie segments wrapper
    var $pathGroup = $(document.createElementNS('http://www.w3.org/2000/svg', 'g'));
    $pathGroup.attr({opacity: 0}).appendTo($svg);

    //Set up tooltip
    var $tip = $('<div class="' + settings.tipClass + '" />').appendTo('body').hide(),
        tipW = $tip.width(),
        tipH = $tip.height();

    //Set up center text area
    var summarySize = (cutoutRadius - (doughnutRadius - cutoutRadius)) * 2,
        $summary = $('<div class="' + settings.summaryClass + '" />')
                   .appendTo($this)
                   .css({ 
                     width: summarySize + "px",
                     height: summarySize + "px",
                     "margin-left": -(summarySize / 2) + "px",
                     "margin-top": -(summarySize / 2) + "px"
                   });
    var $summaryTitle = $('<p class="' + settings.summaryTitleClass + '">' + settings.summaryTitle + '</p>').appendTo($summary);
    var $summaryNumber = $('<p class="' + settings.summaryNumberClass + '"></p>').appendTo($summary).css({opacity: 0});

    for (var i = 0, len = data.length; i < len; i++) {
      segmentTotal += data[i].value;
      $paths[i] = $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))
        .attr({
          "stroke-width": settings.segmentStrokeWidth,
          "stroke": settings.segmentStrokeColor,
          "fill": data[i].color,
          "data-order": i
        })
        .appendTo($pathGroup)
        .on("mouseenter", pathMouseEnter)
        .on("mouseleave", pathMouseLeave)
        .on("mousemove", pathMouseMove);
    }

    //Animation start
    animationLoop(drawPieSegments);

    //Functions
    function getHollowCirclePath(doughnutRadius, cutoutRadius) {
        //Calculate values for the path.
        //We needn't calculate startRadius, segmentAngle and endRadius, because base doughnut doesn't animate.
        var startRadius = -1.570,// -Math.PI/2
            segmentAngle = 6.2831,// 1 * ((99.9999/100) * (PI*2)),
            endRadius = 4.7131,// startRadius + segmentAngle
            startX = centerX + cos(startRadius) * doughnutRadius,
            startY = centerY + sin(startRadius) * doughnutRadius,
            endX2 = centerX + cos(startRadius) * cutoutRadius,
            endY2 = centerY + sin(startRadius) * cutoutRadius,
            endX = centerX + cos(endRadius) * doughnutRadius,
            endY = centerY + sin(endRadius) * doughnutRadius,
            startX2 = centerX + cos(endRadius) * cutoutRadius,
            startY2 = centerY + sin(endRadius) * cutoutRadius;
        var cmd = [
          'M', startX, startY,
          'A', doughnutRadius, doughnutRadius, 0, 1, 1, endX, endY,//Draw outer circle
          'Z',//Close path
          'M', startX2, startY2,//Move pointer
          'A', cutoutRadius, cutoutRadius, 0, 1, 0, endX2, endY2,//Draw inner circle
          'Z'
        ];
        cmd = cmd.join(' ');
        return cmd;
    };
    function pathMouseEnter(e) {
      var order = $(this).data().order;
      $tip.text(data[order].title + ": " + data[order].value)
          .fadeIn(200);
      settings.onPathEnter.apply($(this),[e,data]);
    }
    function pathMouseLeave(e) {
      $tip.hide();
      settings.onPathLeave.apply($(this),[e,data]);
    }
    function pathMouseMove(e) {
      $tip.css({
        top: e.pageY + settings.tipOffsetY,
        left: e.pageX - $tip.width() / 2 + settings.tipOffsetX
      });
    }
    function drawPieSegments (animationDecimal) {
      var startRadius = -PI / 2,//-90 degree
          rotateAnimation = 1;
      if (settings.animation && settings.animateRotate) rotateAnimation = animationDecimal;//count up between0~1

      drawDoughnutText(animationDecimal, segmentTotal);

      $pathGroup.attr("opacity", animationDecimal);

      //If data have only one value, we draw hollow circle(#1).
      if (data.length === 1 && (4.7122 < (rotateAnimation * ((data[0].value / segmentTotal) * (PI * 2)) + startRadius))) {
        $paths[0].attr("d", getHollowCirclePath(doughnutRadius, cutoutRadius));
        return;
      }
      for (var i = 0, len = data.length; i < len; i++) {
        var segmentAngle = rotateAnimation * ((data[i].value / segmentTotal) * (PI * 2)),
            endRadius = startRadius + segmentAngle,
            largeArc = ((endRadius - startRadius) % (PI * 2)) > PI ? 1 : 0,
            startX = centerX + cos(startRadius) * doughnutRadius,
            startY = centerY + sin(startRadius) * doughnutRadius,
            endX2 = centerX + cos(startRadius) * cutoutRadius,
            endY2 = centerY + sin(startRadius) * cutoutRadius,
            endX = centerX + cos(endRadius) * doughnutRadius,
            endY = centerY + sin(endRadius) * doughnutRadius,
            startX2 = centerX + cos(endRadius) * cutoutRadius,
            startY2 = centerY + sin(endRadius) * cutoutRadius;
        var cmd = [
          'M', startX, startY,//Move pointer
          'A', doughnutRadius, doughnutRadius, 0, largeArc, 1, endX, endY,//Draw outer arc path
          'L', startX2, startY2,//Draw line path(this line connects outer and innner arc paths)
          'A', cutoutRadius, cutoutRadius, 0, largeArc, 0, endX2, endY2,//Draw inner arc path
          'Z'//Cloth path
        ];
        $paths[i].attr("d", cmd.join(' '));
        startRadius += segmentAngle;
      }
    }
    function drawDoughnutText(animationDecimal, segmentTotal) {
      $summaryNumber
        .css({opacity: animationDecimal})
        .text((segmentTotal * animationDecimal).toFixed(1));
    }
    function animateFrame(cnt, drawData) {
      var easeAdjustedAnimationPercent =(settings.animation)? CapValue(easingFunction(cnt), null, 0) : 1;
      drawData(easeAdjustedAnimationPercent);
    }
    function animationLoop(drawData) {
      var animFrameAmount = (settings.animation)? 1 / CapValue(settings.animationSteps, Number.MAX_VALUE, 1) : 1,
          cnt =(settings.animation)? 0 : 1;
      requestAnimFrame(function() {
          cnt += animFrameAmount;
          animateFrame(cnt, drawData);
          if (cnt <= 1) {
            requestAnimFrame(arguments.callee);
          } else {
            settings.afterDrawed.call($this);
          }
      });
    }
    function Max(arr) {
      return Math.max.apply(null, arr);
    }
    function Min(arr) {
      return Math.min.apply(null, arr);
    }
    function isNumber(n) {
      return !isNaN(parseFloat(n)) && isFinite(n);
    }
    function CapValue(valueToCap, maxValue, minValue) {
      if (isNumber(maxValue) && valueToCap > maxValue) return maxValue;
      if (isNumber(minValue) && valueToCap < minValue) return minValue;
      return valueToCap;
    }
    return $this;
  };
})(jQuery);

//test nữa
var daxem = parseInt($('#daxem').val());
var chuaxem = parseInt($('#chuaxem').val());
$(function(){
  $("#pieChart").drawPieChart([
    { title: "Xem nhưng chưa xét",              value : daxem,  color: "#2C3E50" },
    { title: "Chưa xem",      value : chuaxem,   color: "#D7DADB" }
  ]);
});
;(function($, undefined) {
  $.fn.drawPieChart = function(data, options) {
    var $this = this,
      W = $this.width(),
      H = $this.height(),
      centerX = W/2,
      centerY = H/2,
      cos = Math.cos,
      sin = Math.sin,
      PI = Math.PI,
      settings = $.extend({
        segmentShowStroke : true,
        segmentStrokeColor : "#fff",
        segmentStrokeWidth : 1,
        baseColor: "#fff",
        baseOffset: 15,
        edgeOffset: 30,//offset from edge of $this
        pieSegmentGroupClass: "pieSegmentGroup",
        pieSegmentClass: "pieSegment",
        lightPiesOffset: 12,//lighten pie's width
        lightPiesOpacity: .3,//lighten pie's default opacity
        lightPieClass: "lightPie",
        animation : true,
        animationSteps : 90,
        animationEasing : "easeInOutExpo",
        tipOffsetX: -15,
        tipOffsetY: -45,
        tipClass: "pieTip",
        beforeDraw: function(){  },
        afterDrawed : function(){  },
        onPieMouseenter : function(e,data){  },
        onPieMouseleave : function(e,data){  },
        onPieClick : function(e,data){  }
      }, options),
      animationOptions = {
        linear : function (t){
          return t;
        },
        easeInOutExpo: function (t) {
          var v = t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t;
          return (v>1) ? 1 : v;
        }
      },
      requestAnimFrame = function(){
        return window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame ||
          window.oRequestAnimationFrame ||
          window.msRequestAnimationFrame ||
          function(callback) {
            window.setTimeout(callback, 1000 / 60);
          };
      }();

    var $wrapper = $('<svg width="' + W + '" height="' + H + '" viewBox="0 0 ' + W + ' ' + H + '" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"></svg>').appendTo($this);
    var $groups = [],
        $pies = [],
        $lightPies = [],
        easingFunction = animationOptions[settings.animationEasing],
        pieRadius = Min([H/2,W/2]) - settings.edgeOffset,
        segmentTotal = 0;

    //Draw base circle
    var drawBasePie = function(){
      var base = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      var $base = $(base).appendTo($wrapper);
      base.setAttribute("cx", centerX);
      base.setAttribute("cy", centerY);
      base.setAttribute("r", pieRadius+settings.baseOffset);
      base.setAttribute("fill", settings.baseColor);
    }();

    //Set up pie segments wrapper
    var pathGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    var $pathGroup = $(pathGroup).appendTo($wrapper);
    $pathGroup[0].setAttribute("opacity",0);

    //Set up tooltip
    var $tip = $('<div class="' + settings.tipClass + '" />').appendTo('body').hide(),
      tipW = $tip.width(),
      tipH = $tip.height();

    for (var i = 0, len = data.length; i < len; i++){
      segmentTotal += data[i].value;
      var g = document.createElementNS('http://www.w3.org/2000/svg', 'g');
      g.setAttribute("data-order", i);
      g.setAttribute("class", settings.pieSegmentGroupClass);
      $groups[i] = $(g).appendTo($pathGroup);
      $groups[i]
        .on("mouseenter", pathMouseEnter)
        .on("mouseleave", pathMouseLeave)
        .on("mousemove", pathMouseMove)
        .on("click", pathClick);

      var p = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      p.setAttribute("stroke-width", settings.segmentStrokeWidth);
      p.setAttribute("stroke", settings.segmentStrokeColor);
      p.setAttribute("stroke-miterlimit", 2);
      p.setAttribute("fill", data[i].color);
      p.setAttribute("class", settings.pieSegmentClass);
      $pies[i] = $(p).appendTo($groups[i]);

      var lp = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      lp.setAttribute("stroke-width", settings.segmentStrokeWidth);
      lp.setAttribute("stroke", settings.segmentStrokeColor);
      lp.setAttribute("stroke-miterlimit", 2);
      lp.setAttribute("fill", data[i].color);
      lp.setAttribute("opacity", settings.lightPiesOpacity);
      lp.setAttribute("class", settings.lightPieClass);
      $lightPies[i] = $(lp).appendTo($groups[i]);
    }

    settings.beforeDraw.call($this);
    //Animation start
    triggerAnimation();

    function pathMouseEnter(e){
      var index = $(this).data().order;
      $tip.text(data[index].title + ": " + data[index].value).fadeIn(200);
      if ($groups[index][0].getAttribute("data-active") !== "active"){
        $lightPies[index].animate({opacity: .8}, 180);
      }
      settings.onPieMouseenter.apply($(this),[e,data]);
    }
    function pathMouseLeave(e){
      var index = $(this).data().order;
      $tip.hide();
      if ($groups[index][0].getAttribute("data-active") !== "active"){
        $lightPies[index].animate({opacity: settings.lightPiesOpacity}, 100);
      }
      settings.onPieMouseleave.apply($(this),[e,data]);
    }
    function pathMouseMove(e){
      $tip.css({
        top: e.pageY + settings.tipOffsetY,
        left: e.pageX - $tip.width() / 2 + settings.tipOffsetX
      });
    }
    function pathClick(e){
      var index = $(this).data().order;
      var targetGroup = $groups[index][0];
      for (var i = 0, len = data.length; i < len; i++){
        if (i === index) continue;
        $groups[i][0].setAttribute("data-active","");
        $lightPies[i].css({opacity: settings.lightPiesOpacity});
      }
      if (targetGroup.getAttribute("data-active") === "active"){
        targetGroup.setAttribute("data-active","");
        $lightPies[index].css({opacity: .8});
      } else {
        targetGroup.setAttribute("data-active","active");
        $lightPies[index].css({opacity: 1});
      }
      settings.onPieClick.apply($(this),[e,data]);
    }
    function drawPieSegments (animationDecimal){
      var startRadius = -PI/2,//-90 degree
          rotateAnimation = 1;
      if (settings.animation) {
        rotateAnimation = animationDecimal;//count up between0~1
      }

      $pathGroup[0].setAttribute("opacity",animationDecimal);

      //draw each path
      for (var i = 0, len = data.length; i < len; i++){
        var segmentAngle = rotateAnimation * ((data[i].value/segmentTotal) * (PI*2)),//start radian
            endRadius = startRadius + segmentAngle,
            largeArc = ((endRadius - startRadius) % (PI * 2)) > PI ? 1 : 0,
            startX = centerX + cos(startRadius) * pieRadius,
            startY = centerY + sin(startRadius) * pieRadius,
            endX = centerX + cos(endRadius) * pieRadius,
            endY = centerY + sin(endRadius) * pieRadius,
            startX2 = centerX + cos(startRadius) * (pieRadius + settings.lightPiesOffset),
            startY2 = centerY + sin(startRadius) * (pieRadius + settings.lightPiesOffset),
            endX2 = centerX + cos(endRadius) * (pieRadius + settings.lightPiesOffset),
            endY2 = centerY + sin(endRadius) * (pieRadius + settings.lightPiesOffset);
        var cmd = [
          'M', startX, startY,//Move pointer
          'A', pieRadius, pieRadius, 0, largeArc, 1, endX, endY,//Draw outer arc path
          'L', centerX, centerY,//Draw line to the center.
          'Z'//Cloth path
        ];
        var cmd2 = [
          'M', startX2, startY2,
          'A', pieRadius + settings.lightPiesOffset, pieRadius + settings.lightPiesOffset, 0, largeArc, 1, endX2, endY2,//Draw outer arc path
          'L', centerX, centerY,
          'Z'
        ];
        $pies[i][0].setAttribute("d",cmd.join(' '));
        $lightPies[i][0].setAttribute("d", cmd2.join(' '));
        startRadius += segmentAngle;
      }
    }

    var animFrameAmount = (settings.animation)? 1/settings.animationSteps : 1,//if settings.animationSteps is 10, animFrameAmount is 0.1
        animCount =(settings.animation)? 0 : 1;
    function triggerAnimation(){
      if (settings.animation) {
        requestAnimFrame(animationLoop);
      } else {
        drawPieSegments(1);
      }
    }
    function animationLoop(){
      animCount += animFrameAmount;//animCount start from 0, after "settings.animationSteps"-times executed, animCount reaches 1.
      drawPieSegments(easingFunction(animCount));
      if (animCount < 1){
        requestAnimFrame(arguments.callee);
      } else {
        settings.afterDrawed.call($this);
      }
    }
    function Max(arr){
      return Math.max.apply(null, arr);
    }
    function Min(arr){
      return Math.min.apply(null, arr);
    }
    return $this;
  };
})(jQuery);

//lại test nữa

function viewGraph(){
$('.column').css('height','0');
$('.table_chart tr').each(function(index) {
var ha = $(this).children('td').eq(1).text();
$('#col'+index).animate({height: ha}, 1500).html("<div>"+ha+"</div>");
});
}
$(document).ready(function(){
viewGraph();
});
            </script>
            </html>